{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "storageAccountPrefix": {
      "type": "string",
      "metadata": {
        "description": "Globally unique lowercase name of storage account"
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of storage account created"
      }
    },
    "virtualMachinePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for the VM-Series name"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for VM-Series administrator"
      }
    },
    "availabilitySetName": {
      "type": "string"
    },
    "availabilitySetPlatformFaultDomainCount": {
      "type": "int"
    },
    "availabilitySetPlatformUpdateDomainCount": {
      "type": "int"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": null,
      "metadata": {
        "description": "Password for VM-Series administrator"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_A4"
      ],
      "metadata": {
        "description": "Azure VM Size for VM-Series"
      }
    },
    "vmCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM-Series to deploy"
      }
    },
    "virtualNetworkName": {
      "defaultValue": "",
      "type": "string"
    },
    "subnetMgmt": {
      "type": "string",
      "metadata": {
        "description": "Subnet for the Management"
      }
    },
    "subnetUntrust": {
      "type": "string",
      "metadata": {
        "description": "Subnet for the untrust"
      }
    },
    "subnetTrust": {
      "type": "string",
      "metadata": {
        "description": "Subnet for the trust"
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string"
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "imagePublisher": "paloaltonetworks",
    "imageSku": "byol",
    "imageOffer": "vmseries1",
    "imageVersion": "7.1.0",
    "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnetMgmt'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnetUntrust'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnetTrust'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(parameters('storageAccountPrefix'), add(copyIndex(), 1))]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "copy": {
        "name": "storageAccountLoop",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "name": "[parameters('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[parameters('availabilitySetPlatformFaultDomainCount')]",
        "platformUpdateDomainCount": "[parameters('availabilitySetPlatformUpdateDomainCount')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1))]",
      "location": "[parameters('location')]",
      "copy": {
        "count": "[parameters('vmCount')]",
        "name": "virtualMachineLoop"
      },
      "dependsOn": [
        "storageAccountLoop",
        "managementCopy",
        "untrustCopy",
        "trustCopy",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
      ],
      "plan": {
        "name": "[variables('imageSku')]",
        "product": "[variables('imageOffer')]",
        "publisher": "[variables('imagePublisher')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "[concat(parameters('virtualMachinePrefix'), 'os')]",
			"createOption": "FromImage",
            "vhd": {
              "uri": "[concat('http://', parameters('storageAccountPrefix'), add(copyIndex(), 1), '.blob.core.windows.net/vhds/', parameters('virtualMachinePrefix'), add(copyIndex(), 1), 'os.vhd')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1), '-nic-eth0'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1), '-nic-eth1'))]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1), '-nic-eth2'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1), '-nic-eth0')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "managementCopy",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1), '-nic-eth0')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet0Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1), '-nic-eth1')]",
      "location": "[parameters('location')]",
      "dependsOn": [],
      "copy": {
        "name": "untrustCopy",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "[concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1), '-nic-eth1')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1), '-nic-eth2')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "trustCopy",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "[concat(parameters('virtualMachinePrefix'), add(copyIndex(), 1), '-nic-eth2')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ]
      }
    }
  ]
}